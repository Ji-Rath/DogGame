// 2020-02-15 01:04:55
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = sMiniGameCrab1Setup;
uses_physics = false;

#event create

//Setup crab arm state
enum Crab1State
{
    Setup,
    Signal,
    Attack
}
State = Crab1State.Setup;


//Timer setup
timer[0] = random_range(0.5,2)*60;

Spd = 1.5;

#event step

image_alpha = oMiniGame.OpenEffect;
if(oMiniGame.timer[0] == -1)
{
    var TimerReady = (timer[0] <= 0 && timer[0] != -1)
    
    //State machine
    switch(State)
    {
        case Crab1State.Setup:
            sprite_index = sMiniGameCrab1Setup;
            //When setup timer is done, go to signal state
            if(TimerReady)
            {
                State = Crab1State.Signal;
                timer[0] = 0.4*60; //Amount of time to react
            }
        break;
        
        case Crab1State.Signal:
            sprite_index = sMiniGameCrab1Signal;
            image_speed = 0.75;
            Spd = 0;
            if(TimerReady)
            {
                State = Crab1State.Attack;
            }
        break;
        
        case Crab1State.Attack:
            Spd = 0;
            sprite_index = sMiniGameCrab1Bite;
            if(oMiniGame.timer[1] > 0.5*60)
            {
                oMiniGame.timer[1] = 0.5*60;
            }
        break;
    }
    
    if(point_distance(x,y,oCrab1Player.x,y) > Spd)
    {
        move_towards_point(oCrab1Player.x,y,Spd);
    }
    else
    {
        x = oCrab1Player.x
        speed = 0;
    }
    
    //Timer management
    if(timer[0] > 0)
    {
        timer[0] -= 1;
    }

}

#event draw

draw_self();