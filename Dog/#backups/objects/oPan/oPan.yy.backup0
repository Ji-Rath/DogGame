// 2020-07-22 12:21:12
#event properties (no comments/etc. here are saved)
parent_index = oPhysicsDrag;
sprite_index = sPan;
uses_physics = false;

#event create Insert description here
// You can write your code in this editor

event_inherited();

//Default values for physics object
Fixture = physics_fixture_create();
physics_fixture_set_density(Fixture, 1);
physics_fixture_set_restitution(Fixture, 0.25);
physics_fixture_set_collision_group(Fixture, 0);
physics_fixture_set_linear_damping(Fixture, 0);
physics_fixture_set_angular_damping(Fixture, 0.05);
physics_fixture_set_friction(Fixture,0.5);
physics_fixture_set_polygon_shape(Fixture);
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 47-SpriteYOffset); 
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 47-SpriteYOffset);
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 80-SpriteYOffset);
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 80-SpriteYOffset);
ObjectFixture = physics_fixture_bind(Fixture, self);
physics_fixture_delete(Fixture);


#event collision:oEnemyBattleParent Insert description here
// You can write your code in this editor

//Apply damage to enemy if the pan collides with the enemy
if(!Hit)
{
	oEnemyBattleParent.Health -= clamp(abs(phy_speed_y),3,5);
	Hit = true;
	oMiniGame.timer[1] = 0.5*60;
	
	var Icon = instance_create_layer(room_width/2, room_height/2, "GUI", oIconPopup);
    Icon.Sprite = sCheckMark;
}

#event mouse_left_press

event_inherited();
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 47-SpriteYOffset); 
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 47-SpriteYOffset);
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 80-SpriteYOffset);
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 80-SpriteYOffset);
ObjectFixture = physics_fixture_bind(Fixture, self);
physics_fixture_delete(Fixture);

#event mouse_global_left_release

event_inherited();

//Remove current fixture properties
physics_remove_fixture(self, ObjectFixture);

//Default values for physics object
Fixture = physics_fixture_create();
physics_fixture_set_density(Fixture, 1);
physics_fixture_set_restitution(Fixture, 0.1);
physics_fixture_set_collision_group(Fixture, 0);
physics_fixture_set_linear_damping(Fixture, 0.5);
physics_fixture_set_angular_damping(Fixture, 0.1);
physics_fixture_set_friction(Fixture,0.5);
physics_fixture_set_polygon_shape(Fixture);
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 47-SpriteYOffset); 
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 47-SpriteYOffset);
physics_fixture_add_point(Fixture, 94-SpriteXOffset, 80-SpriteYOffset);
physics_fixture_add_point(Fixture, 7-SpriteXOffset, 80-SpriteYOffset);
ObjectFixture = physics_fixture_bind(Fixture, self);
physics_fixture_delete(Fixture);

