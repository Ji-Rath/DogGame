// 2020-02-15 00:48:03
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = sEnemydefault;
uses_physics = false;

#event create Insert description here
// You can write your code in this editor

//Initialize basic variables
HSpeed = 0;
VSpeed = 0;
WalkSpd = 0;
WanderDirectionX = 0;
WanderDirectionY = 0;
DetectRange = 350;
Health = 10;
TimerEnded = false;

//Initialize state
enum estates
{
	Idle,
	Wander,
	Alert,
	Aggro,
	
}
State = estates.Idle;

//Get battleobject of enemy
BattleObject = oEnemyBattleParent;


//Set sprites for object
SIdle = sEnemydefault;
SWalk = sEnemywalk;
SRun = sEnemyrun;
SWalkUp = sEnemywalk;
SRunUp = sEnemyrun;
SWalkDown = sEnemywalk;
SRunDown = sEnemyrun;
SAlert = sEnemyalert;

//Timer
timer[0] = 3*60;


//Shrink enemy
Scale = 0.5;
image_xscale = Scale;
image_yscale = Scale;

//Key
Key = room_get_name(room)+"Enemy"+string(x)+string(y);

#event step Insert description here
// You can write your code in this editor

//If in battle room or dead, turn invisible
visible = !((room == rmBattle) || (Health <= 0));

//Only move if visible and not in a cutscene
if(visible && instance_exists(oDogPaddler) && !instance_exists(oCutScene))
{
	TimerEnded = (timer[0] <= 0);
	//State machine
	switch(State)
	{
		case estates.Idle: scrEnemyIdle(); break;
		case estates.Wander: scrEnemyWander(); break;
		case estates.Alert: scrEnemyAlert(); break;
		case estates.Aggro: scrEnemyAggro(); break;
	}
	//Decrease timer
	if(timer[0] > 0)
	{
		timer[0] -= 1;
	}
}
else 
{
	HSpeed = 0;
	VSpeed = 0;
}

//Go to idle if not moving
if(HSpeed == 0 && VSpeed == 0)
{
	sprite_index = SIdle;
}

//Movement collision
scrMoveCollision();

//Movement animation
scrWalk();

//Depth
depth = -y;


#event draw Insert description here
// You can write your code in this editor

draw_self();

//Draw alert sign if alert
if(State = estates.Alert)
{
	draw_sprite(sAlert,0,x,y-100);
}

//draw_text(0,0,"sigh - " +string(alertcount))