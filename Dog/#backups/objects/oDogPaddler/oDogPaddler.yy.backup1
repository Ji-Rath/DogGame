// 2020-02-22 13:08:16
#event properties (no comments/etc. here are saved)
parent_index = oDepthParent;
sprite_index = sDogpaddlerIdle;
mask_index = sDogpaddlerBox;
uses_physics = false;

#event create Insert description here
// You can write your code in this editor

event_inherited();

//Initialize basic variables
HSpeed = 0;
VSpeed = 0;
Speed = 0;
WalkSpeed = 3;
battlewarp = noone;

Attacker = noone;
BattleAttacker = noone;

//Set scale of player
Scale = 0.5;
image_yscale = Scale;
image_xscale = Scale;

//Create State machine
enum paddlerstates
{
	normal,
	
}
state = paddlerstates.normal;

//Assigning sprites to variables
SWalk = sDogpaddlerWalk;
SRun = sDogpaddlerRun;
SWalkUp = sDogpaddlerWalkUp;
SRunUp = sDogpaddlerRunUp;
SWalkDown = sDogpaddlerWalkDown;
SRunDown = sDogpaddlerRunDown;
SIdle = sDogpaddlerIdle;
SIdleUp = sDogpaddlerIdleUp;
SIdleDown = sDogpaddlerIdleDown;

//Load Variables from ds map if available
var SaveVal = ds_map_find_value(oAreaStats.SaveState,room_get_name(room)+"PlayerX");
if(SaveVal != undefined)
{
	x = ds_map_find_value(oAreaStats.SaveState,room_get_name(room)+"PlayerX");
	y = ds_map_find_value(oAreaStats.SaveState,room_get_name(room)+"PlayerY");
}

//Load Player Stats
scrPlayerStats();

#event step Insert description here
// You can write your code in this editor


//Set speed and animation while walking/running
scrWalk();
if(global.KeySprint)
	Speed = WalkSpeed*2;
else
	Speed = WalkSpeed;


//If player is in the normal state, update movement variables
if (state = paddlerstates.normal)
{
	var HMove = global.KeyRight - global.KeyLeft;
	var VMove = global.KeyDown - global.KeyUp;
	HSpeed = HMove*Speed;
	VSpeed = VMove*Speed;
	if(instance_exists(oCutScene))
	{
		HSpeed = 0;
		VSpeed = 0;
	}
	scrPathSpeed();
	
	scrMoveCollision();
}



//NPC INTERACTION
if (global.KeyInteract && !instance_exists(oCutScene))
{
	var radius = 50;
	var inst = collision_rectangle(x-radius,y-radius,x+radius,y+radius,oNPCParent,false,false);
	if(inst != noone)
	{
		//If player is currently not in dialogue
		if(!inst.TextCooldown)
		{
			scrCreateTextBox(inst.TextArray);
		}
	}
	
	if(place_meeting(x,y,oSaveGame))
	{
		scrGameSave(oAreaStats.CurrentSave);
	}
}

//TESTING EVENTS
if(keyboard_check_pressed(vk_escape))
{
	room_goto(rmTitle);
}

if(keyboard_check_pressed(ord("Q")))
{
	show_debug_message(string(instance_number(oEnemyParent)));
}

#event collision:oEnemyParent Insert description here
// You can write your code in this editor

//If enemy collides with player, go to battle scene

//Go to battle scene if enemy is alert
if (other.State == estates.Aggro)
{
	scrFadeout(rmBattle, c_maroon, 0.05);
	oAreaStats.EnemyBattle = other.BattleObject;
	oAreaStats.EnemyKey = other.Key;
}